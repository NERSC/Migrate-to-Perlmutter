We have a serial hello and an MPI hello code in Fortran, C, and C++ code here. 

1) To build on Cori or on Perlmutter, just use the compiler wrappers: ftn for Fortran, cc for C, and CC for C++ codes. These compiler wrappers will link with the default loaded cray-mpich (MPI) libraries for the MPI hello code automatically. Do not use native compilers (such as gfortran, gcc, g++; nvfortran, nvc, nvc++; crayftn, craycc, craycxx; ifort, icc, icxx) or mpi compiler wrappers (such as mpif90, mpicc, or mpicxx).

On a login node:

Fortran code:
% ftn -o serial-hello serial-hello.f90
% ftn -o mpi-hello mpi-hello.f90

C code:
% cc-o serial-hello serial-hello.c
% cc -o mpi-hello mpi-hello.c

C++ code:
% CC -o serial-hello serial-hello.c
% CC -o mpi-hello mpi-hello.c

2) The batch scripts "run-hello-hsw.sh" and "run-hello-knl.sh" for Cori and run-hello-pm.sh for Perlmutter CPU are prepared for you to just submit with "sbatch" from your default project and without a compute node 
reservation after this class:
% sbatch run-hello-hsw.sh
or 
% sbatch run-hello-knl.sh
% sbatch run-hello-pm.sh

To use today's compute node reservation, please edit run-hello-pm.sh to add
#SBATCH --reservation=pm_cpu_dec1
#SBATCH -A ntrain2

3) You can also use salloc to run an interactive batch job, such as on Perlmutter CPU:
% salloc -N 2 -C cpu -q interactive -t 30:00 --reservation=pm_cpu_dec1 -A ntrain2
(remove --reservation=xxx -A ntrain2 if doing this exercise outside of this class)

<wait for a prompt to get onto a compute node>...
% srun ...
(here use the same srun command as in the batch scripts)


4) First step is to reproduce the build and run as above.

Then try to change numner of nodes, number of MPI tasks, etc. to run the mpi-hello program. (hint: modify -n and -c values) 

Notice the output are not ordered by MPI ranks, can you order them? (hint: use sort)

Also understand that to run serial-hello, you can choose to use or not use the "srun" command. Not use "srun" is preferred for non-MPI jobs. "srun" is required for MPI jobs.

Can you use a different compiler, such as Cray or GNU compiler (other than the default gnu compiler on Perlmutter) to build and run?  (hint: "module load PrgEnv-xxx" module)
